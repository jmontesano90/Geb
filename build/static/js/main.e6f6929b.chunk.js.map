{"version":3,"sources":["config.js","services/token-service.js","nav/nav.js","utils/Utils.js","registrationForm/registrationForm.js","footer/footer.js","splashpage/splashPage.js","GridContext.js","home/home.js","TemplateListItem/TemplateListItem.js","myTemplates/myTemplates.js","transectPage/transectPage.js","gridGenerator/ValidationError.js","gridGenerator/gridGenerator.js","grid/grid.js","idGeneration.js","transect.js","gridUi/buttons/templateButton.js","gridUi/gridUi.js","gridUi/buttons/gridConfigurationButton.js","listTemplate/listTemplate.js","gridList/gridList.js","LoginForm/LoginForm.js","utils/PublicOnlyRoute.js","utils/PrivateRoute.js","grid/gridOld.js","gridList/gridSingle/gridSingle.js","App.js","dummyData/dummyTemplates.js","dummyData/dummyData.js","index.js"],"names":["TokenService","saveAuthToken","token","window","localStorage","setItem","config","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","Nav","handleLogoutClick","props","history","push","className","onClick","this","to","style","textDecoration","role","alt","src","renderLogoutLink","renderLoginLink","Component","NiceDate","date","format","formatDate","Button","join","Input","Required","Section","list","classes","filter","Boolean","RegistrationForm","state","error","handleSubmit","ev","preventDefault","target","full_name","user_name","value","onRegistrationSuccess","onSubmit","htmlFor","name","type","required","id","defaultProps","Footer","SplashPage","GridContext","React","createContext","Home","context","templates","length","data","contextType","TemplateListItem","handleClickDelete","e","handleDeleteTemplate","template","console","log","minimum","width","height","pathname","trigger","x","y","transectCount","partialTransectCount","partialTransectLength","myTemplates","outlineList","map","outline","key","index","ValidationError","message","gridGenerator","forceUpdateHandler","forceUpdate","gridInformation","touched","ready","xPartial","yPartial","direction","handleChange","bind","event","toString","setState","parseInt","validation","onlyNumbers","isNaN","positiveNumbers","handleUpdateGrid","placeholder","onChange","nameValidation","xyValidation","fullTransectValidation","partialTransectValidation","transectLengthValidation","minimumValidation","validateNumberInputs","validatePositiveInputs","disabled","Grid","alteredX","alteredY","test","info","multFactor","i","svg","d3","attr","selectAll","remove","enter","append","d","text","idGeneration","idArray","Math","floor","random","transectGeneration","templateId","newRandom","transectD","rangeOfN","Date","coords","dataId","totalLength","z","checkIfValid","secondaryCheck","b","templateButton","handleAddTemplate","GridUi","newId","buttons","gridConfigurationButton","handleAddData","listTemplate","location","replace","link","selectedData","gridList","handleDeleteData","grids","LoginForm","handleSubmitBasicAuth","PublicOnlyRoute","component","render","componentProps","PrivateRoute","from","GridOld","gridSingle","App","cb","unshift","temp","splice","Provider","path","exact","LogIn","gridUi","homePage","transectPage","GridList","GridSingle","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e6f6929b.chunk.js","sourcesContent":["export default {\r\n  API_ENDPOINT: 'http://localhost:8000/api',\r\n  TOKEN_KEY: 'geb-client-auth-token',\r\n};\r\n","import config from '../config';\r\n\r\nconst TokenService = {\r\n  saveAuthToken(token) {\r\n    window.localStorage.setItem(config.TOKEN_KEY, token);\r\n  },\r\n  getAuthToken() {\r\n    return window.localStorage.getItem(config.TOKEN_KEY);\r\n  },\r\n  clearAuthToken() {\r\n    window.localStorage.removeItem(config.TOKEN_KEY);\r\n  },\r\n  hasAuthToken() {\r\n    return !!TokenService.getAuthToken();\r\n  },\r\n  makeBasicAuthToken(userName, password) {\r\n    return window.btoa(`${userName}:${password}`);\r\n  },\r\n};\r\n\r\nexport default TokenService;\r\n","import React, { Component } from 'react';\r\nimport './nav.css';\r\nimport { Link } from 'react-router-dom';\r\nimport TokenService from '../services/token-service';\r\n\r\nexport default class Nav extends Component {\r\n  handleLogoutClick = () => {\r\n    TokenService.clearAuthToken();\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  renderLogoutLink() {\r\n    return (\r\n      <div className='Header__logged-in'>\r\n        <Link\r\n          onClick={this.handleLogoutClick}\r\n          to='/'\r\n          className='log'\r\n          style={{ textDecoration: 'none' }}\r\n        >\r\n          Logout\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderLoginLink() {\r\n    return (\r\n      <div className='Header__not-logged-in'>\r\n        <Link to='/login' className='log' style={{ textDecoration: 'none' }}>\r\n          Log in\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='nav'>\r\n        <nav role='navigation'>\r\n          <div className='navOptions'>\r\n            <Link\r\n              to='/home'\r\n              className='icon'\r\n              style={{ textDecoration: 'none' }}\r\n            >\r\n              <img alt='logo' src='https://imgur.com/wB7hyOH.jpg'></img>\r\n            </Link>\r\n\r\n            {TokenService.hasAuthToken()\r\n              ? this.renderLogoutLink()\r\n              : this.renderLoginLink()}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { format as formatDate } from 'date-fns';\r\nimport './Utils.css';\r\n\r\nexport function NiceDate({ date, format = 'MM-dd-yyyy' }) {\r\n  return formatDate(date, format);\r\n}\r\n\r\nexport function Hyph() {\r\n  return <span className='Hyph'>{' - '}</span>;\r\n}\r\n\r\nexport function Button({ className, ...props }) {\r\n  return <button className={['Button', className].join(' ')} {...props} />;\r\n}\r\n\r\nexport function Textarea({ className, ...props }) {\r\n  return <textarea className={['Textarea', className].join(' ')} {...props} />;\r\n}\r\n\r\nexport function Input({ className, ...props }) {\r\n  return <input className={['Input', className].join(' ')} {...props} />;\r\n}\r\n\r\nexport function Required({ className, ...props }) {\r\n  return (\r\n    <span className={['Required', className].join(' ')} {...props}>\r\n      &#42;\r\n    </span>\r\n  );\r\n}\r\n\r\nexport function Section({ className, list, ...props }) {\r\n  const classes = ['Section', list && 'Section--list', className]\r\n    .filter(Boolean)\r\n    .join(' ');\r\n  return <section className={classes} {...props} />;\r\n}\r\n","import React, { Component } from 'react';\r\nimport TokenService from '../services/token-service';\r\nimport { Button, Input, Required } from '../utils/Utils';\r\n\r\nexport default class RegistrationForm extends Component {\r\n  static defaultProps = {\r\n    onRegistrationSuccess: () => {},\r\n  };\r\n\r\n  state = { error: null };\r\n\r\n  handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    const { full_name, user_name, password } = ev.target;\r\n\r\n    TokenService.saveAuthToken(\r\n      TokenService.makeBasicAuthToken(user_name.value, password.value)\r\n    );\r\n    full_name.value = '';\r\n    user_name.value = '';\r\n    password.value = '';\r\n    this.props.onRegistrationSuccess();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    return (\r\n      <form className='RegistrationForm' onSubmit={this.handleSubmit}>\r\n        <div role='alert'>{error && <p className='red'>{error}</p>}</div>\r\n        <div className='full_name'>\r\n          <label htmlFor='RegistrationForm__full_name'>\r\n            Full name <Required />\r\n          </label>\r\n          <Input\r\n            name='full_name'\r\n            type='text'\r\n            required\r\n            id='RegistrationForm__full_name'\r\n          ></Input>\r\n        </div>\r\n        <div className='user_name'>\r\n          <label htmlFor='RegistrationForm__user_name'>\r\n            User name <Required />\r\n          </label>\r\n          <Input\r\n            name='user_name'\r\n            type='text'\r\n            required\r\n            id='RegistrationForm__user_name'\r\n          ></Input>\r\n        </div>\r\n        <div className='password'>\r\n          <label htmlFor='RegistrationForm__password'>\r\n            Password <Required />\r\n          </label>\r\n          <Input\r\n            name='password'\r\n            type='password'\r\n            required\r\n            id='RegistrationForm__password'\r\n          ></Input>\r\n        </div>\r\n        <Button type='submit'>Register</Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return <footer role='contentinfo'>Transect Generator</footer>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './splashPage.css';\r\nimport RegistrationForm from '../registrationForm/registrationForm';\r\nimport Footer from '../footer/footer';\r\n\r\nclass SplashPage extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <main role='main'>\r\n          <header\r\n            role='banner'\r\n            // style={{\r\n            //   width: '100%',\r\n            //   height: '100%',\r\n            //   backgroundImage: `url(https://imgur.com/F4KxSGu.jpg)`,\r\n            // }}\r\n          >\r\n            <h1>Geb</h1>\r\n            <h2>Grid Randomizer</h2>\r\n          </header>\r\n\r\n          <section>\r\n            <h3>Truly randomize your sampling</h3>\r\n            <img\r\n              src='https://imgur.com/dtDXC87.png'\r\n              alt='Overlayed grid'\r\n              className='grid'\r\n            ></img>\r\n            <p>\r\n              Say you wanted to sample the vegetation in the area above, Geb\r\n              will generate lines(transects) for you to follow and sample the\r\n              vegetation on!\r\n            </p>\r\n          </section>\r\n\r\n          <section>\r\n            <header>\r\n              <h3>Generate custom transects on the fly</h3>\r\n            </header>\r\n            <p>\r\n              Whether you're a ecologist sampling vegetation, or a biologist\r\n              sampling mosquito larvae you know the value of transect based\r\n              sampling. Geb is a tool designed to generate transect lines to\r\n              survey inside a grid of dimensions of you're choosing.{' '}\r\n            </p>\r\n          </section>\r\n\r\n          <section>\r\n            <header>\r\n              <h3>Save Custom Transects</h3>\r\n            </header>\r\n\r\n            <p>\r\n              No matter how many different sites you visit you may make custom\r\n              grids for all of them and then simply click that configuration and\r\n              Geb will generate transects for you to sample on that day. The\r\n              transects will be completely randomly generated so you will not\r\n              have to worry about any sort of bias in your sampling!\r\n            </p>\r\n          </section>\r\n          <section>\r\n            <header>\r\n              <h3>Keep track of your progress</h3>\r\n            </header>\r\n            <p>\r\n              Whenever a site is sampled, Geb will record the transect\r\n              configuration and any comments you wish to place about the day\r\n              (humidity, cloud cover, how you were feeling etc)\r\n            </p>\r\n          </section>\r\n          <section>\r\n            <header>\r\n              <h3>Start Sampling Now</h3>\r\n            </header>\r\n            <RegistrationForm id='register'></RegistrationForm>\r\n          </section>\r\n        </main>\r\n\r\n        <Footer />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SplashPage;\r\n","import React from 'react';\r\n\r\nconst GridContext = React.createContext({});\r\n\r\nexport default GridContext;\r\n","import React, { Component } from 'react';\r\nimport './home.css';\r\nimport { Link } from 'react-router-dom';\r\nimport GridContext from '../GridContext';\r\nimport Footer from '../footer/footer';\r\n\r\nclass Home extends Component {\r\n  static contextType = GridContext;\r\n  render() {\r\n    return (\r\n      <section>\r\n        <main role='main'>\r\n          <header role='banner'>\r\n            <h1>Geb</h1>\r\n            <h2>Home</h2>\r\n            <Link\r\n              to='/myTemplates'\r\n              style={{ textDecoration: 'none' }}\r\n              className='buttons'\r\n            >\r\n              My Templates\r\n            </Link>\r\n            <Link\r\n              to='/newGrid'\r\n              style={{ textDecoration: 'none' }}\r\n              className='buttons'\r\n            >\r\n              New Template\r\n            </Link>\r\n          </header>\r\n          <section>\r\n            <h3>Number of Templates</h3>\r\n            <p>{this.context.templates.length}</p>\r\n            <h3>Number of sites sampled</h3>\r\n            <p>{this.context.data.length}</p>\r\n          </section>\r\n        </main>\r\n        <Footer />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './TemplateListItem.css';\r\nimport GridContext from '../GridContext';\r\nimport Collapsible from 'react-collapsible';\r\n\r\nexport default class TemplateListItem extends Component {\r\n  static contextType = GridContext;\r\n\r\n  handleClickDelete = (e) => {\r\n    e.preventDefault();\r\n    this.context.handleDeleteTemplate(this.props.id);\r\n  };\r\n  render() {\r\n    const { template } = this.props;\r\n    console.log(template);\r\n    console.log(template.minimum.value);\r\n    return (\r\n      <div className='templateListItem'>\r\n        <header className='TemplateListItem__header'>\r\n          <input\r\n            type='image'\r\n            src='https://imgur.com/FyZgoKZ.png'\r\n            alt='initialzie button'\r\n            className='deleteButton'\r\n            width='35'\r\n            height='35'\r\n            onClick={this.handleClickDelete}\r\n          />\r\n          <Link\r\n            to={{\r\n              pathname: `/template/${this.props.id}`,\r\n              state: {\r\n                template: template,\r\n              },\r\n            }}\r\n          >\r\n            <h2 className='TemplateListItem__heading'>{template.name.value}</h2>\r\n          </Link>\r\n          <Collapsible trigger='View template details' className='collapsible'>\r\n            <div className='valueContainer'>\r\n              <span>X value: </span>\r\n              <span className='values'>{template.x.value}</span>\r\n            </div>\r\n            <div className='valueContainer'>\r\n              <span>Y value: </span>\r\n              <span className='values'>{template.y.value}</span>\r\n            </div>\r\n            <div className='valueContainer'>\r\n              <span>Transect count: </span>\r\n              <span className='values'>{template.transectCount.value}</span>\r\n            </div>\r\n            <div className='valueContainer'>\r\n              <span>\r\n                Minimum distance between transects:{' '}\r\n                <span className='values'>{template.minimum.value}</span>\r\n              </span>\r\n            </div>\r\n            <div className='valueContainer'>\r\n              <span>\r\n                Partial transect count:{' '}\r\n                <span className='values'>\r\n                  {template.partialTransectCount.value}\r\n                </span>\r\n              </span>\r\n            </div>\r\n            <div className='valueContainer'>\r\n              <span>\r\n                Partial transect length:{' '}\r\n                <span className='values'>\r\n                  {template.partialTransectLength.value}\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </Collapsible>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './myTemplates.css';\r\nimport GridContext from '../GridContext';\r\nimport TemplateListItem from '../TemplateListItem/TemplateListItem';\r\nimport { Section } from '../utils/Utils';\r\nimport Footer from '../footer/footer';\r\n\r\nclass myTemplates extends Component {\r\n  static contextType = GridContext;\r\n\r\n  renderOutlines() {\r\n    console.log(this.context.templates);\r\n    const { outlineList = [] } = this.context.templates;\r\n    return outlineList.map((outline) => (\r\n      <TemplateListItem key={outline.id} template={outline} />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    //const { error } = this.context;\r\n    return (\r\n      <section>\r\n        <main role='main'>\r\n          <header role='banner'>\r\n            <h1>Geb</h1>\r\n            <h2>My Templates</h2>\r\n          </header>\r\n          <Section list className='OutlineListPage'>\r\n            {/* {error ? (\r\n              <p className='red'>There was an error, try again</p>\r\n            ) : (\r\n              this.renderOutlines()\r\n            )} */}\r\n            {this.context.templates.map((template, index) => (\r\n              <TemplateListItem template={template} key={index} id={index} />\r\n            ))}\r\n          </Section>\r\n        </main>\r\n        <Footer />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default myTemplates;\r\n","import React from 'react';\r\nimport './transectPage.css';\r\nimport Footer from '../footer/footer';\r\n\r\nfunction Nav() {\r\n  return (\r\n    <section>\r\n      <main role='main'>\r\n        <header role='banner'>\r\n          <h1>Geb</h1>\r\n          <h2>Transect Generator</h2>\r\n        </header>\r\n        <h3>Connetquot</h3>\r\n        <p>\r\n          Load most recent generated transect [Itemize every time this site was\r\n          sampled]\r\n        </p>\r\n        <p> Date it was done on here</p>\r\n        <p>Comments for it here</p>\r\n        <p>Option to delete it here</p>\r\n      </main>\r\n      <Footer />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport './gridGenerator.css';\r\n\r\nexport default function ValidationError(props) {\r\n  if (props.message) {\r\n    return <div className='error'>{props.message}</div>;\r\n  }\r\n\r\n  return <></>;\r\n}\r\n","import React, { Component } from 'react';\r\nimport './gridGenerator.css';\r\nimport GridContext from '../GridContext';\r\nimport ValidationError from './ValidationError';\r\n\r\nclass gridGenerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gridInformation: {\r\n        name: {\r\n          value: 'no name',\r\n          touched: false,\r\n        },\r\n        x: {\r\n          value: 30,\r\n          touched: false,\r\n        },\r\n        y: {\r\n          value: 30,\r\n          touched: false,\r\n        },\r\n        transectCount: {\r\n          value: 4,\r\n          touched: false,\r\n        },\r\n        partialTransectCount: {\r\n          value: 1,\r\n          touched: false,\r\n        },\r\n        partialTransectLength: {\r\n          value: 1,\r\n          touched: false,\r\n        },\r\n        minimum: {\r\n          value: 3,\r\n          touched: false,\r\n        },\r\n        ready: {\r\n          value: 0,\r\n          touched: false,\r\n        },\r\n        id: '60',\r\n      },\r\n      data: {\r\n        x: [14, 21, 2],\r\n        y: [25, 1],\r\n        xPartial: [18],\r\n        yPartial: [9],\r\n        direction: [0],\r\n        partialTransectLength: 5,\r\n      },\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  static contextType = GridContext;\r\n\r\n  handleChange(event) {\r\n    let gridInformation = { ...this.state.gridInformation };\r\n    gridInformation[event.target.name.toString()] = {\r\n      value: event.target.value,\r\n      touched: true,\r\n    };\r\n    this.setState(\r\n      {\r\n        gridInformation,\r\n      },\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  transectLengthValidation() {\r\n    let validation = true;\r\n    if (\r\n      parseInt(this.state.gridInformation.x.value) <\r\n      parseInt(this.state.gridInformation.partialTransectLength.value)\r\n    ) {\r\n      validation = false;\r\n    } else if (\r\n      parseInt(this.state.gridInformation.y.value) <\r\n      parseInt(this.state.gridInformation.partialTransectLength.value)\r\n    ) {\r\n      validation = false;\r\n    } else {\r\n      validation = true;\r\n    }\r\n    if (validation === false) {\r\n      return 'Partial transect cannot be longer than x or y';\r\n    }\r\n  }\r\n\r\n  minimumValidation() {\r\n    let minTran =\r\n      parseInt(this.state.gridInformation.minimum.value) *\r\n      parseInt(this.state.gridInformation.transectCount.value);\r\n    let xyTotal =\r\n      parseInt(this.state.gridInformation.x.value) +\r\n      parseInt(this.state.gridInformation.y.value);\r\n    if (minTran > xyTotal / 1.5) {\r\n      return 'That minimum distance is too long given your other parameters';\r\n    }\r\n  }\r\n\r\n  xyValidation() {\r\n    let validation;\r\n    if (parseInt(this.state.gridInformation.x.value) > 300) {\r\n      validation = false;\r\n    }\r\n    if (parseInt(this.state.gridInformation.y.value) > 300) {\r\n      validation = false;\r\n    }\r\n    if (validation === false) {\r\n      return 'Neither x nor y may be larger than 300';\r\n    }\r\n  }\r\n\r\n  fullTransectValidation() {\r\n    if (parseInt(this.state.gridInformation.transectCount.value) > 10) {\r\n      return 'Cannot have more than 10 transects';\r\n    }\r\n  }\r\n\r\n  partialTransectValidation() {\r\n    if (parseInt(this.state.gridInformation.partialTransectCount.value) > 10) {\r\n      return 'Cannot have more than 10 partial transects';\r\n    }\r\n  }\r\n\r\n  validateNumberInputs() {\r\n    let onlyNumbers = true;\r\n    if (isNaN(this.state.gridInformation.x.value)) {\r\n      onlyNumbers = false;\r\n    }\r\n    if (isNaN(this.state.gridInformation.y.value)) {\r\n      onlyNumbers = false;\r\n    }\r\n    if (isNaN(this.state.gridInformation.transectCount.value)) {\r\n      onlyNumbers = false;\r\n    }\r\n    if (isNaN(this.state.gridInformation.partialTransectCount.value)) {\r\n      onlyNumbers = false;\r\n    }\r\n    if (isNaN(this.state.gridInformation.partialTransectLength.value)) {\r\n      onlyNumbers = false;\r\n    }\r\n    if (isNaN(this.state.gridInformation.minimum.value)) {\r\n      onlyNumbers = false;\r\n    }\r\n    if (onlyNumbers === false) {\r\n      return 'All inputs must be numbers';\r\n    }\r\n  }\r\n\r\n  validatePositiveInputs() {\r\n    let positiveNumbers = true;\r\n    if (parseInt(this.state.gridInformation.x.value) < 0) {\r\n      positiveNumbers = false;\r\n    }\r\n    if (parseInt(this.state.gridInformation.y.value) < 0) {\r\n      positiveNumbers = false;\r\n    }\r\n    if (parseInt(this.state.gridInformation.transectCount.value) < 0) {\r\n      positiveNumbers = false;\r\n    }\r\n    if (parseInt(this.state.gridInformation.partialTransectCount.value) < 0) {\r\n      positiveNumbers = false;\r\n    }\r\n    if (parseInt(this.state.gridInformation.partialTransectLength.value) < 0) {\r\n      positiveNumbers = false;\r\n    }\r\n    if (parseInt(this.state.gridInformation.minimum.value) < 0) {\r\n      positiveNumbers = false;\r\n    }\r\n    if (positiveNumbers === false) {\r\n      return 'All inputs must be positive';\r\n    }\r\n  }\r\n\r\n  nameValidation() {\r\n    if (this.state.gridInformation.name.value === 'no name') {\r\n      return 'All Templates must be named';\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.handleUpdateGrid(this.state.gridInformation, this.state.data);\r\n  }\r\n  rend;\r\n\r\n  forceUpdateHandler = () => {\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='gridGenerator'>\r\n        <form\r\n          className='Transect Grid Generator'\r\n          onSubmit={(e) => this.handleSubmit(e)}\r\n        >\r\n          <div id='myBarChart'></div>\r\n          <section>\r\n            <div>\r\n              <label htmlFor='Name of grid'>Name of Grid</label>\r\n              <input\r\n                placeholder='Washington Square Park'\r\n                type='text'\r\n                name='name'\r\n                id='name'\r\n                required\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </div>\r\n            <ValidationError message={this.nameValidation()} />\r\n            <div>\r\n              <label htmlFor='X length'>X length</label>\r\n              <input\r\n                placeholder='30'\r\n                type='number'\r\n                name='x'\r\n                id='x'\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor='Y length'>Y length</label>\r\n              <input\r\n                type='number'\r\n                name='y'\r\n                id='y'\r\n                placeholder='30'\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </div>\r\n            <ValidationError message={this.xyValidation()} />\r\n            <div>\r\n              <label htmlFor='Transect'>Full Transect count</label>\r\n              <ValidationError message={this.fullTransectValidation()} />\r\n              <input\r\n                type='number'\r\n                name='transectCount'\r\n                id='transectCount'\r\n                placeholder='4'\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor='partial-transect'>Partial Transect Count</label>\r\n              <ValidationError message={this.partialTransectValidation()} />\r\n              <input\r\n                type='number'\r\n                name='partialTransectCount'\r\n                id='partialTransectCount'\r\n                placeholder='1'\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor='partial-transect-length'>\r\n                Partial Transect Length\r\n              </label>\r\n              <ValidationError message={this.transectLengthValidation()} />\r\n              <input\r\n                type='number'\r\n                name='partialTransectLength'\r\n                id='partialTransectLength'\r\n                placeholder='5'\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor='minimum'>\r\n                Minimum distance between transects\r\n              </label>\r\n              <ValidationError message={this.minimumValidation()} />\r\n              <input\r\n                type='number'\r\n                name='minimum'\r\n                id='minimum'\r\n                placeholder='3'\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </div>\r\n            <ValidationError message={this.validateNumberInputs()} />\r\n            <ValidationError message={this.validatePositiveInputs()} />\r\n            <button\r\n              type='submit'\r\n              onClick={this.forceUpdateHandler}\r\n              disabled={\r\n                this.validatePositiveInputs() ||\r\n                this.validateNumberInputs() ||\r\n                this.minimumValidation() ||\r\n                this.transectLengthValidation() ||\r\n                this.partialTransectValidation() ||\r\n                this.fullTransectValidation() ||\r\n                this.xyValidation() ||\r\n                this.nameValidation()\r\n              }\r\n            >\r\n              Generate Custom Transect\r\n            </button>\r\n          </section>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default gridGenerator;\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport './grid.css';\r\n\r\nclass Grid extends Component {\r\n  render() {\r\n    let data = this.props.data;\r\n    let test = this.props.info;\r\n\r\n    let bigV;\r\n    if (test.x.value > test.y.value) {\r\n      bigV = test.x.value;\r\n    } else {\r\n      bigV = test.y.value;\r\n    }\r\n    let multFactor = 300 / bigV;\r\n    let alteredX;\r\n    let alteredY;\r\n\r\n    if (!test.x.value || !test.y.value) {\r\n      console.log('Must wait for both numbers');\r\n    } else {\r\n      alteredX = test.x.value * multFactor;\r\n      alteredY = test.y.value * multFactor;\r\n\r\n      for (let i = 0; i < data.x.length; i++) {\r\n        data.x[i] = data.x[i] * multFactor;\r\n      }\r\n      for (let i = 0; i < data.y.length; i++) {\r\n        data.y[i] = data.y[i] * multFactor;\r\n      }\r\n      for (let i = 0; i < data.xPartial.length; i++) {\r\n        data.xPartial[i] = data.xPartial[i] * multFactor;\r\n      }\r\n      for (let i = 0; i < data.yPartial.length; i++) {\r\n        data.yPartial[i] = data.yPartial[i] * multFactor;\r\n      }\r\n      data.partialTransectLength = data.partialTransectLength * multFactor;\r\n\r\n      let svg = d3\r\n        .select('svg')\r\n        .attr('height', alteredY)\r\n        .attr('width', alteredX);\r\n\r\n      svg.selectAll('*').remove();\r\n\r\n      svg\r\n        .selectAll('svg')\r\n        .data(data.y)\r\n        .enter()\r\n        .append('rect')\r\n        .attr('width', alteredX)\r\n        .attr('height', 4)\r\n        .attr('y', (d, i) => d)\r\n        .attr('fill', 'rgb(1,82,112)');\r\n\r\n      svg\r\n        .selectAll('svg')\r\n        .data(data.x)\r\n        .enter()\r\n        .append('rect')\r\n        .attr('height', alteredY)\r\n        .attr('width', 4)\r\n        .attr('x', (d, i) => d)\r\n        .attr('fill', 'rgb(197,84,40)');\r\n\r\n      svg\r\n        .selectAll('svg')\r\n        .data(data.xPartial)\r\n        .enter()\r\n        .append('rect')\r\n        .attr('height', (d, i) => {\r\n          if (data.direction[i] <= 1) {\r\n            if (data.direction[i] === 0) {\r\n              return data.partialTransectLength;\r\n            } else {\r\n              data.yPartial[i] = data.yPartial[i] - data.partialTransectLength;\r\n              return data.partialTransectLength;\r\n            }\r\n          } else {\r\n            return 4;\r\n          }\r\n        })\r\n        .attr('width', (d, i) => {\r\n          if (data.direction[i] > 1) {\r\n            if (data.direction[i] === 2) {\r\n              return data.partialTransectLength;\r\n            } else {\r\n              data.xPartial[i] = data.xPartial[i] - data.partialTransectLength;\r\n              return data.partialTransectLength;\r\n            }\r\n          } else return 4;\r\n        })\r\n        .attr('x', (d, i) => data.xPartial[i])\r\n        .attr('y', (d, i) => data.yPartial[i])\r\n        .attr('fill', 'rgb(109,88,59)');\r\n\r\n      svg\r\n        .selectAll('svg')\r\n        .data(data.y)\r\n        .enter()\r\n        .append('text')\r\n        .attr('y', (d, i) => d - 4)\r\n        .text((d) => d / multFactor);\r\n\r\n      svg\r\n        .selectAll('svg')\r\n        .data(data.x)\r\n        .enter()\r\n        .append('text')\r\n        .attr('x', (d) => d + 4)\r\n        .attr('y', alteredY - 10)\r\n        .text((d) => d / multFactor);\r\n\r\n      svg\r\n        .selectAll('svg')\r\n        .data(data.xPartial)\r\n        .enter()\r\n        .append('text')\r\n        .attr('x', (d) => d + 4)\r\n        .attr('y', (d, i) => data.yPartial[i] - 4)\r\n        .text((d, i) => d / multFactor + ', ' + data.yPartial[i] / multFactor);\r\n    }\r\n\r\n    return (\r\n      <div id='svgAppender'>\r\n        <svg></svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","export default function idGeneration() {\r\n  let idArray = [];\r\n  let i = 0;\r\n  for (i = 0; i < 10; i++) {\r\n    idArray.push(Math.floor(Math.random() * 9));\r\n  }\r\n  return idArray.join('');\r\n}\r\n","import idGeneration from './idGeneration';\r\n\r\nexport default function transectGeneration(info, templateId) {\r\n  let transectD = [];\r\n  let rangeOfN = [];\r\n  let d = new Date();\r\n  let coords = {\r\n    x: [],\r\n    y: [],\r\n    xPartial: [],\r\n    yPartial: [],\r\n    direction: [],\r\n    partialTransectLength: info.partialTransectLength.value,\r\n    id: templateId,\r\n    dataId: idGeneration(),\r\n    date: d,\r\n  };\r\n  let newRandom;\r\n\r\n  info.x.value = parseInt(info.x.value);\r\n  info.y.value = parseInt(info.y.value);\r\n  let totalLength = info.x.value + info.y.value;\r\n  // console.log('Total Length is: ' + totalLength);\r\n  transectD.push(Math.floor(Math.random() * totalLength));\r\n  // console.log('Transectd at 0 is: ' + transectD[0]);\r\n  let i = 0;\r\n  let y = 1;\r\n  for (i = 0; i < info.transectCount.value - 1; i++) {\r\n    // console.log('  ');\r\n    // console.log('  ');\r\n    // console.log(transectD);\r\n    // console.log('  ');\r\n    newRandom = Math.floor(Math.random() * totalLength);\r\n    // console.log('New random: ' + newRandom);\r\n    for (y = 0; y < info.minimum.value; y++) {\r\n      rangeOfN.push(transectD[i] - y);\r\n      rangeOfN.push(transectD[i] + y);\r\n    }\r\n    let z = 0;\r\n    let checkIfValid = false;\r\n    let secondaryCheck = 0;\r\n    // console.log('Current random number being checked: ' + newRandom);\r\n    while (checkIfValid === false) {\r\n      if (newRandom === rangeOfN[z]) {\r\n        // console.log('Within unacceptable range, :' + newRandom);\r\n        // console.log('z value' + z);\r\n        secondaryCheck += 1;\r\n      }\r\n      if (z + 1 === rangeOfN.length) {\r\n        if (secondaryCheck === 0) {\r\n          // console.log('Passed checks, adding ' + newRandom);\r\n          transectD.push(newRandom);\r\n          checkIfValid = true;\r\n        } else {\r\n          newRandom = Math.floor(Math.random() * totalLength);\r\n          z = 0;\r\n          secondaryCheck = 0;\r\n          // console.log(\r\n          //   'new random failed checks, rerolling new number as: ' + newRandom\r\n          // );\r\n        }\r\n      }\r\n      z += 1;\r\n      // console.log('Incrementing z');\r\n    }\r\n  }\r\n  let b = 0;\r\n  for (b = 0; b < transectD.length; b++) {\r\n    if (transectD[b] > info.x.value) {\r\n      coords.y.push(transectD[b] - info.x.value);\r\n    } else {\r\n      coords.x.push(transectD[b]);\r\n    }\r\n  }\r\n\r\n  if (info.partialTransectCount.value >= 1) {\r\n    for (i = 0; i < info.partialTransectCount.value; i++) {\r\n      coords.xPartial.push(Math.floor(Math.random() * info.x.value));\r\n      coords.yPartial.push(Math.floor(Math.random() * info.y.value));\r\n      coords.direction.push(Math.floor(Math.random() * 3));\r\n\r\n      if (coords.xPartial[i] < info.partialTransectLength.value) {\r\n        if (coords.direction[i] === 3) {\r\n          coords.direction[i] = 2;\r\n        }\r\n      }\r\n      if (coords.xPartial[i] > info.x - info.partialTransectLength.value) {\r\n        if (coords.direction[i] === 2) {\r\n          coords.direction[i] = 3;\r\n        }\r\n      }\r\n\r\n      if (coords.yPartial[i] < info.partialTransectLength.value) {\r\n        if (coords.direction[i] === 1) {\r\n          coords.direction[i] = 0;\r\n        }\r\n      }\r\n\r\n      if (coords.yPartial[i] > info.y - info.partialTransectLength.value) {\r\n        if (coords.direction[i] === 0) {\r\n          coords.direction[i] = 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return coords;\r\n}\r\n","import React, { Component } from 'react';\r\nimport GridContext from '../../GridContext';\r\n\r\nclass templateButton extends Component {\r\n  static contextType = GridContext;\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.context.handleAddTemplate(this.props.template, () => {\r\n      this.props.history.push('/myTemplates');\r\n    });\r\n  };\r\n  render() {\r\n    templateButton.contextType = GridContext;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <button type='submit'>Save this template?</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default templateButton;\r\n","import React, { Component } from 'react';\r\nimport GridGenerator from '../gridGenerator/gridGenerator';\r\nimport Grid from '../grid/grid';\r\nimport GridContext from '../GridContext';\r\nimport transectGeneration from '../transect';\r\nimport TemplateButton from './buttons/templateButton';\r\nimport './gridUi.css';\r\nimport idGeneration from '../idGeneration';\r\n\r\nclass GridUi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gridInformation: {\r\n        name: {\r\n          value: 'no name',\r\n          touched: false,\r\n        },\r\n        x: {\r\n          value: 30,\r\n          touched: false,\r\n        },\r\n        y: {\r\n          value: 30,\r\n          touched: false,\r\n        },\r\n        transectCount: {\r\n          value: 4,\r\n          touched: false,\r\n        },\r\n        partialTransectCount: {\r\n          value: 1,\r\n          touched: false,\r\n        },\r\n        partialTransectLength: {\r\n          value: 5,\r\n          touched: false,\r\n        },\r\n        minimum: {\r\n          value: 3,\r\n          touched: false,\r\n        },\r\n        id: '60',\r\n      },\r\n      data: {\r\n        x: [14, 21, 2],\r\n        y: [25, 1],\r\n        xPartial: [18],\r\n        yPartial: [9],\r\n        direction: [0],\r\n        partialTransectLength: 5,\r\n        id: '60',\r\n      },\r\n      ready: false,\r\n    };\r\n  }\r\n\r\n  handleUpdateGrid = (gridInformation) => {\r\n    let newId = idGeneration();\r\n    let data = transectGeneration(gridInformation, newId);\r\n    gridInformation.id = newId;\r\n    this.setState({\r\n      gridInformation: gridInformation,\r\n      data: data,\r\n      ready: true,\r\n    });\r\n  };\r\n  static contextType = GridContext;\r\n\r\n  render() {\r\n    // const value = {\r\n    //   handleUpdateGrid: this.handleUpdateGrid,\r\n    // };\r\n    let buttons;\r\n    if (this.state.ready === true) {\r\n      buttons = (\r\n        <section id='saveOptions'>\r\n          <TemplateButton\r\n            history={this.props.history}\r\n            template={this.state.gridInformation}\r\n          />{' '}\r\n        </section>\r\n      );\r\n    }\r\n    return (\r\n      <section>\r\n        {' '}\r\n        <header role='banner'>\r\n          <h1>Geb</h1>\r\n          <h2>Template Generator</h2>\r\n        </header>\r\n        <GridGenerator handleUpdateGrid={this.handleUpdateGrid}></GridGenerator>\r\n        {<Grid data={this.state.data} info={this.state.gridInformation}></Grid>}\r\n        {buttons}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridUi;\r\n","import React, { Component } from 'react';\r\nimport GridContext from '../../GridContext';\r\n\r\nclass gridConfigurationButton extends Component {\r\n  static contextType = GridContext;\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.context.handleAddData(this.props.data);\r\n    console.log('Added new template to context');\r\n    console.log(this.props);\r\n  };\r\n  render() {\r\n    console.log(this.props.data);\r\n    gridConfigurationButton.contextType = GridContext;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <button type='submit'>Save this sampling event?</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default gridConfigurationButton;\r\n","import React, { Component } from 'react';\r\nimport transectGeneration from '../transect';\r\nimport Grid from '../grid/grid';\r\nimport GridConfigurationButton from '../gridUi/buttons/gridConfigurationButton';\r\nimport { Link } from 'react-router-dom';\r\nimport Footer from '../footer/footer';\r\nimport GridContext from '../GridContext';\r\n\r\nclass listTemplate extends Component {\r\n  static contextType = GridContext;\r\n  constructor(props) {\r\n    super(props);\r\n    if (!this.props.location.state.template) {\r\n      this.props.history.replace('/home');\r\n    }\r\n\r\n    this.state = {\r\n      gridInformation: {\r\n        name: {\r\n          value: this.props.location.state.template.name.value,\r\n          touched: false,\r\n        },\r\n        x: {\r\n          value: this.props.location.state.template.x.value,\r\n          touched: false,\r\n        },\r\n        y: {\r\n          value: this.props.location.state.template.y.value,\r\n          touched: false,\r\n        },\r\n        transectCount: {\r\n          value: this.props.location.state.template.transectCount.value,\r\n          touched: false,\r\n        },\r\n        partialTransectCount: {\r\n          value: this.props.location.state.template.partialTransectCount.value,\r\n          touched: false,\r\n        },\r\n        partialTransectLength: {\r\n          value: this.props.location.state.template.partialTransectLength.value,\r\n          touched: false,\r\n        },\r\n        minimum: {\r\n          value: this.props.location.state.template.minimum.value,\r\n          touched: false,\r\n        },\r\n        id: this.props.location.state.template.id,\r\n      },\r\n      data: {\r\n        x: [],\r\n        y: [],\r\n        xPartial: [],\r\n        yPartial: [],\r\n        direction: [],\r\n        partialTransectLength: 0,\r\n        id: this.props.location.state.template.id,\r\n      },\r\n      ready: false,\r\n    };\r\n  }\r\n\r\n  handleUpdateGrid = (gridInformation) => {\r\n    let data = transectGeneration(\r\n      gridInformation,\r\n      this.props.location.state.template.id\r\n    );\r\n    this.setState({\r\n      gridInformation: gridInformation,\r\n      data: data,\r\n      ready: true,\r\n    });\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    let data = transectGeneration(\r\n      this.state.gridInformation,\r\n      this.props.location.state.template.id\r\n    );\r\n    this.setState({\r\n      gridInformation: this.state.gridInformation,\r\n      data: data,\r\n      ready: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let buttons;\r\n    if (this.state.ready === true) {\r\n      buttons = (\r\n        <section id='saveOptions'>\r\n          <GridConfigurationButton\r\n            data={this.state.data}\r\n          ></GridConfigurationButton>\r\n        </section>\r\n      );\r\n    }\r\n    let i;\r\n    let selectedData = [];\r\n    for (i = 0; i < this.context.data.length; i++) {\r\n      if (this.context.data[i].id === this.state.gridInformation.id) {\r\n        selectedData.push(this.context.data[i]);\r\n      }\r\n    }\r\n\r\n    let link;\r\n    if (selectedData.length !== 0) {\r\n      link = (\r\n        <Link\r\n          to={{\r\n            pathname: `/template/${this.state.gridInformation.id}/grids`,\r\n            state: {\r\n              template: this.state.gridInformation,\r\n            },\r\n          }}\r\n        >\r\n          Previous Sampling Events\r\n        </Link>\r\n      );\r\n    }\r\n    return (\r\n      <section>\r\n        <main role='main'>\r\n          <header role='banner'>\r\n            <h1>Geb</h1>\r\n            <h2>{this.state.gridInformation.name.value}</h2>\r\n          </header>\r\n\r\n          {link}\r\n\r\n          <form onSubmit={(e) => this.handleSubmit(e)}>\r\n            <button type='submit'> Generate new sampling event?</button>\r\n            {\r\n              <Grid\r\n                data={this.state.data}\r\n                info={this.state.gridInformation}\r\n              ></Grid>\r\n            }\r\n            {buttons}\r\n          </form>\r\n        </main>\r\n        <Footer />\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default listTemplate;\r\n","import React, { Component } from 'react';\r\nimport GridContext from '../GridContext';\r\nimport { NiceDate } from '../utils/Utils';\r\nimport './gridList.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass gridList extends Component {\r\n  static contextType = GridContext;\r\n\r\n  handleClickDelete = (e) => {\r\n    e.preventDefault();\r\n    this.context.handleDeleteData(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    let selectedData = [];\r\n    let i;\r\n\r\n    for (i = 0; i < this.context.data.length; i++) {\r\n      if (this.context.data[i].id === this.props.location.state.template.id) {\r\n        selectedData.push(this.context.data[i]);\r\n      }\r\n    }\r\n    if (selectedData.length === 0) {\r\n      this.props.history.push('/myTemplates');\r\n    }\r\n    let grids = selectedData.map((data, index) => (\r\n      <div className='gridDividers'>\r\n        <Link\r\n          to={{\r\n            pathname: `/template/${data.id}/grids/${data.dataId}`,\r\n            state: {\r\n              template: this.props.location.state.template,\r\n              data: data,\r\n            },\r\n          }}\r\n        >\r\n          Sampled on <NiceDate date={data.date} />\r\n        </Link>\r\n      </div>\r\n    ));\r\n    return (\r\n      <section>\r\n        <main role='main'>\r\n          <header role='banner'>\r\n            <h1>Geb</h1>\r\n            <h2>{this.props.location.state.template.name.value}</h2>\r\n          </header>\r\n          {grids}\r\n        </main>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default gridList;\r\n","import React, { Component } from 'react';\r\nimport TokenService from '../services/token-service';\r\nimport { Button, Input } from '../utils/Utils';\r\nimport './LoginForm.css';\r\nimport Footer from '../footer/footer';\r\n\r\nexport default class LoginForm extends Component {\r\n  state = { error: null };\r\n\r\n  handleSubmitBasicAuth = (ev) => {\r\n    ev.preventDefault();\r\n    const { user_name, password } = ev.target;\r\n\r\n    TokenService.saveAuthToken(\r\n      TokenService.makeBasicAuthToken(user_name.value, password.value)\r\n    );\r\n\r\n    user_name.value = '';\r\n    password.value = '';\r\n\r\n    this.props.history.replace('/home');\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    return (\r\n      <div>\r\n        <form className='LoginForm' onSubmit={this.handleSubmitBasicAuth}>\r\n          <div role='alert'>{error && <p className='red'>{error}</p>}</div>\r\n          <div className='user_name'>\r\n            <label htmlFor='LoginForm__user_name'>User name</label>\r\n            <Input name='user_name' id='LoginForm__user_name'></Input>\r\n          </div>\r\n          <div className='password'>\r\n            <label htmlFor='LoginForm__password'>Password</label>\r\n            <Input\r\n              name='password'\r\n              type='password'\r\n              id='LoginForm__password'\r\n            ></Input>\r\n          </div>\r\n          <Button type='submit'>Login</Button>\r\n        </form>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport TokenService from '../services/token-service';\r\n\r\nexport default function PublicOnlyRoute({ component, ...props }) {\r\n  const Component = component;\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(componentProps) =>\r\n        TokenService.hasAuthToken() ? (\r\n          <Redirect to={'/'} />\r\n        ) : (\r\n          <Component {...componentProps} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport TokenService from '../services/token-service';\r\n\r\nexport default function PrivateRoute({ component, ...props }) {\r\n  const Component = component;\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(componentProps) =>\r\n        TokenService.hasAuthToken() ? (\r\n          <Component {...componentProps} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: componentProps.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport './grid.css';\r\n\r\nclass GridOld extends Component {\r\n  componentDidMount() {\r\n    let data = this.props.data;\r\n    console.log(data.y);\r\n    let test = this.props.info;\r\n    console.log(test.x.value);\r\n\r\n    let bigV;\r\n    if (test.x.value > test.y.value) {\r\n      bigV = test.x.value;\r\n    } else {\r\n      bigV = test.y.value;\r\n    }\r\n    let multFactor = 300 / bigV;\r\n    let alteredX = test.x.value * multFactor;\r\n    let alteredY = test.y.value * multFactor;\r\n\r\n    let svg = d3\r\n      .select('svg')\r\n      .attr('height', alteredY)\r\n      .attr('width', alteredX)\r\n      .style('fill', 'red');\r\n\r\n    //svg.selectAll('*').remove();\r\n\r\n    svg\r\n      .selectAll('svg')\r\n      .data(data.y)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('width', alteredX)\r\n      .attr('height', 4)\r\n      .attr('y', (d, i) => d)\r\n      .attr('fill', 'rgb(1,82,112)');\r\n\r\n    svg\r\n      .selectAll('svg')\r\n      .data(data.x)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('height', alteredY)\r\n      .attr('width', 4)\r\n      .attr('x', (d, i) => d)\r\n      .attr('fill', 'rgb(197,84,40)');\r\n\r\n    svg\r\n      .selectAll('svg')\r\n      .data(data.xPartial)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('height', (d, i) => {\r\n        if (data.direction[i] <= 1) {\r\n          if (data.direction[i] === 0) {\r\n            return data.partialTransectLength;\r\n          } else {\r\n            data.yPartial[i] = data.yPartial[i] - data.partialTransectLength;\r\n            return data.partialTransectLength;\r\n          }\r\n        } else {\r\n          return 4;\r\n        }\r\n      })\r\n      .attr('width', (d, i) => {\r\n        if (data.direction[i] > 1) {\r\n          if (data.direction[i] === 2) {\r\n            return data.partialTransectLength;\r\n          } else {\r\n            data.xPartial[i] = data.xPartial[i] - data.partialTransectLength;\r\n            return data.partialTransectLength;\r\n          }\r\n        } else return 4;\r\n      })\r\n      .attr('x', (d, i) => data.xPartial[i])\r\n      .attr('y', (d, i) => data.yPartial[i])\r\n      .attr('fill', 'rgb(109,88,59)');\r\n\r\n    svg\r\n      .selectAll('svg')\r\n      .data(data.y)\r\n      .enter()\r\n      .append('text')\r\n      .attr('y', (d, i) => d - 4)\r\n      .text((d) => d);\r\n\r\n    svg\r\n      .selectAll('svg')\r\n      .data(data.x)\r\n      .enter()\r\n      .append('text')\r\n      .attr('x', (d) => d + 4)\r\n      .attr('y', alteredY - 10)\r\n      .text((d) => d);\r\n\r\n    svg\r\n      .selectAll('svg')\r\n      .data(data.xPartial)\r\n      .enter()\r\n      .append('text')\r\n      .attr('x', (d) => d + 4)\r\n      .attr('y', (d, i) => data.yPartial[i] - 4)\r\n      .text((d, i) => d + ', ' + data.yPartial[i]);\r\n  }\r\n  render() {\r\n    return (\r\n      <div id='svgAppender'>\r\n        <svg></svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridOld;\r\n","import React, { Component } from 'react';\r\nimport GridOld from '../../grid/gridOld';\r\n\r\nclass gridSingle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gridInformation: {},\r\n      data: {},\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <section>\r\n        <main role='main'>\r\n          <header role='banner'>\r\n            <h1>Geb</h1>\r\n            <h2>{this.props.location.state.template.name.value}</h2>\r\n          </header>\r\n        </main>\r\n        {\r\n          <GridOld\r\n            data={this.props.location.state.data}\r\n            info={this.props.location.state.template}\r\n          />\r\n        }\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default gridSingle;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from './nav/nav';\nimport SplashPage from './splashpage/splashPage';\nimport homePage from './home/home';\nimport myTemplates from './myTemplates/myTemplates';\nimport transectPage from './transectPage/transectPage';\nimport GridContext from './GridContext';\nimport gridUi from './gridUi/gridUi';\nimport listTemplate from './listTemplate/listTemplate';\nimport GridList from './gridList/gridList';\nimport LogIn from './LoginForm/LoginForm';\nimport PublicOnlyRoute from './utils/PublicOnlyRoute';\nimport PrivateOnlyRoute from './utils/PrivateRoute';\nimport { Route } from 'react-router-dom';\nimport dummyData from './dummyData/dummyData';\nimport dummyTemplates from './dummyData/dummyTemplates';\nimport GridSingle from './gridList/gridSingle/gridSingle';\n\nclass App extends Component {\n  state = {\n    templates: [],\n    data: [],\n  };\n\n  componentDidMount() {\n    this.state.templates.unshift(dummyTemplates());\n    this.state.data.unshift(dummyData());\n\n    this.setState({\n      templates: this.state.templates,\n      data: this.state.data,\n    });\n  }\n\n  handleAddTemplate = (template, cb) => {\n    this.state.templates.unshift(template);\n    this.setState({ templates: this.state.templates }, cb);\n  };\n\n  handleDeleteTemplate = (id) => {\n    let temp = this.state.templates;\n    temp.splice(id, 1);\n    this.setState({\n      templates: temp,\n    });\n  };\n\n  handleAddData = (data) => {\n    this.state.data.unshift(data);\n    this.setState({ data: this.state.data });\n  };\n\n  handleDeleteData = (id) => {\n    let temp = this.state.data;\n    temp.splice(id, 1);\n    this.setState({\n      data: temp,\n    });\n  };\n\n  render() {\n    const value = {\n      templates: this.state.templates,\n      data: this.state.data,\n      handleAddData: this.handleAddData,\n      handleAddTemplate: this.handleAddTemplate,\n      handleDeleteData: this.handleDeleteData,\n      handleDeleteTemplate: this.handleDeleteTemplate,\n    };\n    return (\n      <GridContext.Provider value={value}>\n        <div className='App'>\n          <Route path='/' component={Nav} />\n\n          <PublicOnlyRoute exact path='/' component={SplashPage} />\n          <PublicOnlyRoute path='/login' component={LogIn} />\n          <PrivateOnlyRoute path='/newGrid' component={gridUi} />\n          <PrivateOnlyRoute path='/home' component={homePage} />\n          <PrivateOnlyRoute path='/myTemplates' component={myTemplates} />\n          <PrivateOnlyRoute path='/transectPage' component={transectPage} />\n          <PrivateOnlyRoute\n            exact\n            path='/template/:templateId'\n            component={listTemplate}\n          />\n          <PrivateOnlyRoute\n            exact\n            path='/template/:templateId/grids'\n            component={GridList}\n          />\n          <PrivateOnlyRoute\n            exact\n            path='/template/:templateId/grids/:gridId'\n            component={GridSingle}\n          />\n        </div>\n      </GridContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","export default function dummyTemplates() {\r\n  let dummyTemplates = {\r\n    name: {\r\n      value: 'Connetquot',\r\n      touched: false,\r\n    },\r\n    x: {\r\n      value: 30,\r\n      touched: false,\r\n    },\r\n    y: {\r\n      value: 30,\r\n      touched: false,\r\n    },\r\n    transectCount: {\r\n      value: 4,\r\n      touched: false,\r\n    },\r\n    partialTransectCount: {\r\n      value: 1,\r\n      touched: false,\r\n    },\r\n    partialTransectLength: {\r\n      value: 5,\r\n      touched: false,\r\n    },\r\n    minimum: {\r\n      value: 3,\r\n      touched: false,\r\n    },\r\n    id: '61',\r\n  };\r\n  return dummyTemplates;\r\n}\r\n","export default function dummyData() {\r\n  let date = new Date();\r\n  let dummyData = {\r\n    x: [110, 20],\r\n    y: [260, 20],\r\n    xPartial: [220],\r\n    yPartial: [240],\r\n    direction: [0],\r\n    partialTransectLength: 10,\r\n    id: '61',\r\n    dataId: '23',\r\n    date: date,\r\n  };\r\n  return dummyData;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}